<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kaliber3D.Render</name>
    </assembly>
    <members>
        <member name="T:Kaliber3D.Render.Data">
            <summary>
            Kaliber3D.Render data context.
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ObservableObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ObservableObject.Notify(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Kaliber3D.Render.ObservableObject.Update``1(``0@,``0,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="propertyName"></param>
        </member>
        <member name="E:Kaliber3D.Render.ObservableObject.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Data.Bindings">
            <summary>
            Gets or sets a colletion ShapeBinding that will be used during drawing.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Data.Properties">
            <summary>
            Gets or sets a colletion ShapeProperty that will be used during drawing.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Data.Record">
            <summary>
            Gets or sets shape data record.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Data.Item(System.String)">
            <summary>
            Gets or sets property Value using Name as key for Properties array values. If property with the specified key does not exist it is created.
            </summary>
            <param name="name">The property name value.</param>
            <returns>The property Value.</returns>
        </member>
        <member name="T:Kaliber3D.Render.ConvexHullBounds">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ConvexHullBounds.Contains(System.Double,System.Double,Kaliber3D.Render.Vector2[],System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="convexHull"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ConvexHullBounds.Contains(System.Collections.Generic.IList{Kaliber3D.Render.XPoint},Kaliber3D.Render.Vector2,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="point"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ConvexHullBounds.Contains(Kaliber3D.Render.XBezier,Kaliber3D.Render.Vector2,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="bezier"></param>
            <param name="point"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ConvexHullBounds.Contains(Kaliber3D.Render.XQBezier,Kaliber3D.Render.Vector2,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="qbezier"></param>
            <param name="point"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ConvexHullBounds.GetVertices(System.Collections.Generic.IList{Kaliber3D.Render.XPoint},System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ConvexHullBounds.GetVertices(Kaliber3D.Render.XBezier,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="bezier"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ConvexHullBounds.GetVertices(Kaliber3D.Render.XQBezier,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="qbezier"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ConvexHullBounds.Overlap(Kaliber3D.Render.Vector2[],Kaliber3D.Render.Vector2[])">
            <summary>
            
            </summary>
            <param name="selection"></param>
            <param name="vertices"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.ShapeBounds">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.GetPointBounds(Kaliber3D.Render.XPoint,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="treshold"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.GetRectangleBounds(Kaliber3D.Render.XRectangle,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="rectangle"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.GetEllipseBounds(Kaliber3D.Render.XEllipse,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="ellipse"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.GetArcBounds(Kaliber3D.Render.XArc,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="arc"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.GetTextBounds(Kaliber3D.Render.XText,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.GetImageBounds(Kaliber3D.Render.XImage,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.HitTestLine(Kaliber3D.Render.XLine,Kaliber3D.Render.Vector2,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="line"></param>
            <param name="p"></param>
            <param name="treshold"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.HitTest(Kaliber3D.Render.BaseShape,Kaliber3D.Render.Vector2,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="shape"></param>
            <param name="p"></param>
            <param name="treshold"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.HitTest(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape},Kaliber3D.Render.Vector2,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="shapes"></param>
            <param name="p"></param>
            <param name="treshold"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.HitTest(Kaliber3D.Render.Container,Kaliber3D.Render.Vector2,System.Double)">
            <summary>
            
            </summary>
            <param name="container"></param>
            <param name="p"></param>
            <param name="treshold"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.HitTest(Kaliber3D.Render.BaseShape,Kaliber3D.Render.Rect2,Kaliber3D.Render.Vector2[],System.Collections.Immutable.ImmutableHashSet{Kaliber3D.Render.BaseShape}.Builder,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="shape"></param>
            <param name="rect"></param>
            <param name="selection"></param>
            <param name="builder"></param>
            <param name="treshold"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.HitTest(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape},Kaliber3D.Render.Rect2,Kaliber3D.Render.Vector2[],System.Collections.Immutable.ImmutableHashSet{Kaliber3D.Render.BaseShape}.Builder,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="shapes"></param>
            <param name="rect"></param>
            <param name="selection"></param>
            <param name="builder"></param>
            <param name="treshold"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBounds.HitTest(Kaliber3D.Render.Container,Kaliber3D.Render.Rect2,System.Double)">
            <summary>
            
            </summary>
            <param name="container"></param>
            <param name="rect"></param>
            <param name="treshold"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.Command">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Command.NotifyCanExecuteChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Command.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            
            </summary>
            <param name="execute"></param>
            <param name="canExecute"></param>
        </member>
        <member name="M:Kaliber3D.Render.Command.CanExecute(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Command.Execute(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Kaliber3D.Render.Command.Create(System.Action,System.Func{System.Boolean})">
            <summary>
            
            </summary>
            <param name="execute"></param>
            <param name="canExecute"></param>
            <returns></returns>
        </member>
        <member name="E:Kaliber3D.Render.Command.CanExecuteChanged">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Command`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Kaliber3D.Render.Command`1.NotifyCanExecuteChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Command`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})">
            <summary>
            
            </summary>
            <param name="execute"></param>
            <param name="canExecute"></param>
        </member>
        <member name="M:Kaliber3D.Render.Command`1.CanExecute(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Command`1.Execute(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Kaliber3D.Render.Command`1.Create(System.Action{`0},System.Func{`0,System.Boolean})">
            <summary>
            
            </summary>
            <param name="execute"></param>
            <param name="canExecute"></param>
            <returns></returns>
        </member>
        <member name="E:Kaliber3D.Render.Command`1.CanExecuteChanged">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ExportType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ExportType.Style">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ExportType.Styles">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ExportType.StyleLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ExportType.StyleLibraries">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ExportType.Group">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ExportType.Groups">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ExportType.GroupLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ExportType.GroupLibraries">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ExportType.Template">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ExportType.Templates">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Helper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Helper.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.Helper.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.Helper.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.Helper.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.Helper.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.Helper.ToStateOne">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Helper.ToStateTwo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Helper.ToStateThree">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Helper.ToStateFour">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Helper.Move(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.Helper.Finalize(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.Helper.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.UndoRedo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.UndoRedo.#ctor(System.Action,System.Action)">
            <summary>
            
            </summary>
            <param name="undo"></param>
            <param name="redo"></param>
        </member>
        <member name="M:Kaliber3D.Render.UndoRedo.Create(System.Action,System.Action)">
            <summary>
            
            </summary>
            <param name="undo"></param>
            <param name="redo"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.History">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.History.Snapshot``1(``0,``0,System.Action{``0})">
            <summary>
            
            </summary>
            <param name="previous"></param>
            <param name="next"></param>
            <param name="update"></param>
        </member>
        <member name="M:Kaliber3D.Render.History.CanUndo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.History.CanRedo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.History.Undo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.History.Redo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.History.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ImportType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ImportType.Style">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ImportType.Styles">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ImportType.StyleLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ImportType.StyleLibraries">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ImportType.Group">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ImportType.Groups">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ImportType.GroupLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ImportType.GroupLibraries">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ImportType.Template">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ImportType.Templates">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.PathTool">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.PathTool.Line">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.PathTool.Arc">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.PathTool.Bezier">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.PathTool.QBezier">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.PathTool.Move">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.RecentProject">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.RecentProject.Create(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.RecentProject.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.RecentProject.Path">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.State">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.State.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.State.One">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.State.Two">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.State.Three">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.State.Four">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Tool">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.Selection">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.Group">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.Point">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.Line">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.Arc">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.Bezier">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.QBezier">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.Path">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.Rectangle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.Ellipse">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Tool.Image">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Editor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Create(Kaliber3D.Render.Project,Kaliber3D.Render.IRenderer[])">
            <summary>
            Creates a new Editor instance.
            </summary>
            <param name="project">The project to edit.</param>
            <param name="renderers">The shape renderers.</param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Snap(System.Double,System.Double)">
            <summary>
            Snaps value by specified snap parameter.
            </summary>
            <param name="value">The value to snap.</param>
            <param name="snap">The snap amount.</param>
            <returns>The snapped value.</returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.GetAllPathPoints(Kaliber3D.Render.XPath)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.GetAllPoints(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape},Kaliber3D.Render.ShapeStateFlags)">
            <summary>
            
            </summary>
            <param name="shapes"></param>
            <param name="exclude"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.GetAllShapes(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape})">
            <summary>
            
            </summary>
            <param name="shapes"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.GetAllShapes``1(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="shapes"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.GetAllShapes``1(Kaliber3D.Render.Project)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="project"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.MovePointsBy(System.Collections.Generic.IEnumerable{Kaliber3D.Render.XPoint},System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.MoveShapesBy(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape},System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="shapes"></param>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.AddWithHistory(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.AddWithHistory(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape})">
            <summary>
            
            </summary>
            <param name="shapes"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.AddWithHistory(Kaliber3D.Render.Data,Kaliber3D.Render.ShapeProperty)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="property"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.AddWithHistory(Kaliber3D.Render.Container,Kaliber3D.Render.ShapeProperty)">
            <summary>
            
            </summary>
            <param name="container"></param>
            <param name="property"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.AddWithHistory(Kaliber3D.Render.Data,Kaliber3D.Render.ShapeBinding)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="binding"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.RemoveCurrentTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.RemoveCurrentGroupLibrary">
            <summary>
            Removes the Project.CurrentGroupLibrary object from the Project.GroupLibraries collection.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.RemoveCurrentGroup">
            <summary>
            Removes the Project.CurrentGroupLibrary.CurrentGroup object from the Project.CurrentGroupLibrary.Groups collection.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.RemoveCurrentLayer">
            <summary>
            Removes the Container.CurrentLayer object from the Container.Layers collection.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.RemoveCurrentShape">
            <summary>
            Removes the Container.CurrentShape object from the Container.CurrentLayer.Shapes collection.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.RemoveCurrentStyleLibrary">
            <summary>
            Removed the Project.CurrentStyleLibrary object from the Project.StyleLibraries collection.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.RemoveCurrentStyle">
            <summary>
            Removes the Project.CurrentStyleLibrary.CurrentStyle object from the Project.CurrentStyleLibrary.Styles collection.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Load(Kaliber3D.Render.Project,System.String)">
            <summary>
            
            </summary>
            <param name="project"></param>
            <param name="path"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Unload">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.GroupSelected">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Ungroup(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape},System.Collections.Generic.IList{Kaliber3D.Render.BaseShape},System.Boolean)">
            <summary>
            
            </summary>
            <param name="shapes"></param>
            <param name="original"></param>
            <param name="groupShapes"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.UngroupSelected">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Move(Kaliber3D.Render.BaseShape,System.Int32,System.Int32)">
            <summary>
            Move shape from source index to target index position in an array. 
            </summary>
            <param name="source"></param>
            <param name="sourceIndex"></param>
            <param name="targetIndex"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.BringToFront(Kaliber3D.Render.BaseShape)">
            <summary>
            Bring a shape to the top of the stack.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.BringForward(Kaliber3D.Render.BaseShape)">
            <summary>
            Move a shape one step closer to the front of the stack.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.SendBackward(Kaliber3D.Render.BaseShape)">
            <summary>
            Move a shape one step down within the stack.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.SendToBack(Kaliber3D.Render.BaseShape)">
            <summary>
            Move a shape to the bottom of the stack.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.BringToFrontSelected">
            <summary>
            Bring selected shapes to the top of the stack.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.BringForwardSelected">
            <summary>
            Move selected shapes one step closer to the front of the stack.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.SendBackwardSelected">
            <summary>
            Move selected shapes one step down within the stack.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.SendToBackSelected">
            <summary>
            Move selected shapes to the bottom of the stack.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.MoveSelectedByWithHistory(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.MoveUpSelected">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.MoveDownSelected">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.MoveLeftSelected">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.MoveRightSelected">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Delete(Kaliber3D.Render.Container)">
            <summary>
            Removes container object from owner document Containers collection.
            </summary>
            <param name="container">The container object to remove from document Containers collection.</param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Delete(Kaliber3D.Render.Document)">
            <summary>
            Removes document object from project Documents collection.
            </summary>
            <param name="document">The document object to remove from project Documents collection.</param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.DeleteSelected">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Select(Kaliber3D.Render.Container,Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="container"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Select(Kaliber3D.Render.Container,System.Collections.Immutable.ImmutableHashSet{Kaliber3D.Render.BaseShape})">
            <summary>
            
            </summary>
            <param name="container"></param>
            <param name="shapes"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Deselect">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Deselect(Kaliber3D.Render.Container)">
            <summary>
            
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.TryToSelectShapes(Kaliber3D.Render.Container,Kaliber3D.Render.XRectangle)">
            <summary>
            
            </summary>
            <param name="container"></param>
            <param name="rectangle"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.TryToSelectShape(Kaliber3D.Render.Container,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="container"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Hover(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Dehover">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Dehover(Kaliber3D.Render.Container)">
            <summary>
            
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.TryToHoverShape(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.TryToSplitLine(System.Double,System.Double,Kaliber3D.Render.XPoint,System.Boolean)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="point"></param>
            <param name="select"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.TryToSplitLine(Kaliber3D.Render.XLine,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint)">
            <summary>
            
            </summary>
            <param name="line"></param>
            <param name="p0"></param>
            <param name="p1"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.TryToConnect(Kaliber3D.Render.XGroup)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.IsLeftDownAvailable">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.IsLeftUpAvailable">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.IsRightDownAvailable">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.IsRightUpAvailable">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.IsMoveAvailable">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.IsSelectionAvailable">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Editor.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.Editor.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:Kaliber3D.Render.Editor.Log">
            <summary>
            Gets or sets current log.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.Project">
            <summary>
            Gets or sets current project.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.ProjectPath">
            <summary>
            Gets or sets current project path.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.IsProjectDirty">
            <summary>
            Gets or sets flag indicating that current project was modified.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.Renderers">
            <summary>
            Gets or sets current renderers.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.CurrentTool">
            <summary>
            Gets or sets current editor tool.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.CurrentPathTool">
            <summary>
            Gets or sets current editor path tool.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.EnableObserver">
            <summary>
            Gets or sets if project collections and objects observer is enabled.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.Observer">
            <summary>
            Gets or sets current project collections and objects observer.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.History">
            <summary>
            Gets or sets undo/redo history handler.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.CancelAvailable">
            <summary>
            Gets or sets flag indicating that current operation can be canceled.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.GetImageKey">
            <summary>
            Get image path using common system open file dialog.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.SelectionHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.PointHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.LineHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.ArcHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.BezierHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.QBezierHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.PathHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.RectangleHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.EllipseHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.TextHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Editor.ImageHelper">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.EditorCommands">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.NewCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.OpenCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.CloseCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.SaveCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.SaveAsCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExportCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExitCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ImportDataCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExportDataCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.UpdateDataCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ImportStyleCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ImportStylesCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ImportStyleLibraryCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ImportStyleLibrariesCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ImportGroupCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ImportGroupsCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ImportGroupLibraryCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ImportGroupLibrariesCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ImportTemplateCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ImportTemplatesCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExportStyleCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExportStylesCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExportStyleLibraryCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExportStyleLibrariesCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExportGroupCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExportGroupsCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExportGroupLibraryCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExportGroupLibrariesCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExportTemplateCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ExportTemplatesCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.UndoCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RedoCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.CopyAsEmfCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.CutCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.CopyCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.PasteCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.DeleteCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.SelectAllCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.DeselectAllCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ClearAllCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.GroupCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.UngroupCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.BringToFrontCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.BringForwardCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.SendBackwardCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.SendToBackCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.MoveUpCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.MoveDownCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.MoveLeftCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.MoveRightCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolNoneCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolSelectionCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolPointCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolLineCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolArcCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolBezierCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolQBezierCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolPathCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolRectangleCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolEllipseCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolTextCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolImageCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ToolMoveCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.DefaultIsStrokedCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.DefaultIsFilledCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.DefaultIsClosedCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.DefaultIsSmoothJoinCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.SnapToGridCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.TryToConnectCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddDatabaseCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RemoveDatabaseCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddColumnCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RemoveColumnCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddRecordCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RemoveRecordCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ResetRecordCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddBindingCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RemoveBindingCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddPropertyCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RemovePropertyCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddGroupLibraryCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RemoveGroupLibraryCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddGroupCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RemoveGroupCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddLayerCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RemoveLayerCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddStyleLibraryCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RemoveStyleLibraryCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddStyleCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RemoveStyleCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RemoveShapeCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ZoomResetCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ZoomExtentCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ProjectWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.OptionsWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.TemplatesWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.GroupsWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.DatabasesWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.DatabaseWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ContainerWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.DocumentWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.StylesWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.LayersWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ShapesWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.TemplateWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.PropertiesWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.StateWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.DataWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.StyleWindowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddTemplateCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.RemoveTemplateCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.EditTemplateCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ApplyTemplateCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.SelectedItemChangedCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddContainerCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.InsertContainerBeforeCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.InsertContainerAfterCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.AddDocumentCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.InsertDocumentBeforeCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.InsertDocumentAfterCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.LoadWindowLayoutCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.SaveWindowLayoutCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorCommands.ResetWindowLayoutCommand">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.EditorContext">
             <summary>
            
             </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnNew(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnClose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnExit">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnUndo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRedo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnCut">
             <summary>
            
             </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnCopy">
             <summary>
            
             </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnPaste">
             <summary>
            
             </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnCut(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnCopy(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnPaste(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnDelete(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnSelectAll">
             <summary>
            
             </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnDeselectAll">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnClearAll">
             <summary>
            
             </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRemoveDatabase(System.Object)">
            <summary>
            
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddColumn(System.Object)">
            <summary>
            
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRemoveColumn(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddRecord">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRemoveRecord">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnResetRecord(System.Object)">
            <summary>
            
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddBinding(System.Object)">
            <summary>
            
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRemoveBinding(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddProperty(System.Object)">
            <summary>
            
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRemoveProperty(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddGroupLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRemoveGroupLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRemoveGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddLayer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRemoveLayer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddStyleLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRemoveStyleLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRemoveStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRemoveShape">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnRemoveTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnEditTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnApplyTemplate(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnSelectedItemChanged(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddContainer(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnInsertContainerBefore(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnInsertContainerAfter(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnAddDocument(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnInsertDocumentBefore(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnInsertDocumentAfter(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolNone">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolSelection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolPoint">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolLine">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolArc">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolBezier">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolQBezier">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolPath">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolRectangle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolEllipse">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolText">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolImage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToolMove">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToggleDefaultIsStroked">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToggleDefaultIsFilled">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToggleDefaultIsClosed">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToggleDefaultIsSmoothJoin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToggleSnapToGrid">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.OnToggleTryToConnect">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.InvalidateCache(System.Boolean)">
             <summary>
            
             </summary>
             <param name="isZooming"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.New">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Open(System.String)">
             <summary>
            
             </summary>
             <param name="path"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Save(System.String)">
             <summary>
            
             </summary>
             <param name="path"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.ExportAsPdf(System.String,System.Object)">
             <summary>
            
             </summary>
             <param name="path"></param>
             <param name="item"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.ExportAsDxf(System.String)">
             <summary>
            
             </summary>
             <param name="path"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.ImportObject(System.String,System.Object,Kaliber3D.Render.ImportType)">
             <summary>
            
             </summary>
             <param name="path"></param>
             <param name="item"></param>
             <param name="type"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.ExportObject(System.String,System.Object,Kaliber3D.Render.ExportType)">
             <summary>
            
             </summary>
             <param name="path"></param>
             <param name="item"></param>
             <param name="type"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.ImportData(System.String)">
             <summary>
            
             </summary>
             <param name="path"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.ExportData(System.String,Kaliber3D.Render.Database)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="database"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.UpdateData(System.String,Kaliber3D.Render.Database)">
             <summary>
            
             </summary>
             <param name="path"></param>
             <param name="database"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.AddRecent(System.String,System.String)">
            <summary>
            Add recent project file.
            </summary>
            <param name="path"></param>
            <param name="name"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.LoadRecent(System.String)">
            <summary>
            Load recent project files.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.SaveRecent(System.String)">
            <summary>
            Save recent project files.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.CanCopy">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.CanPaste">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Copy(System.Collections.Generic.IList{Kaliber3D.Render.BaseShape})">
             <summary>
            
             </summary>
             <param name="shapes"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Paste(System.String)">
             <summary>
            
             </summary>
             <param name="json"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.TryToRestoreStyles(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape})">
             <summary>
            
             </summary>
             <param name="shapes"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.TryToRestoreRecords(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape})">
             <summary>
            
             </summary>
             <param name="shapes"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Paste(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape})">
             <summary>
            
             </summary>
             <param name="shapes"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Clone(Kaliber3D.Render.XGroup)">
             <summary>
            
             </summary>
             <param name="group"></param>
             <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Clone(Kaliber3D.Render.Container)">
             <summary>
            
             </summary>
             <param name="container"></param>
             <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Clone(Kaliber3D.Render.Document)">
             <summary>
            
             </summary>
             <param name="document"></param>
             <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Drop(System.String[])">
             <summary>
            
             </summary>
             <param name="files"></param>
             <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.DropAsClone(Kaliber3D.Render.XGroup,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Drop(Kaliber3D.Render.Record,System.Double,System.Double)">
             <summary>
            
             </summary>
             <param name="record"></param>
             <param name="x"></param>
             <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.DropAsShapeAndBind(Kaliber3D.Render.Record,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="record"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.DropAsGroup(Kaliber3D.Render.Record,System.Double,System.Double)">
             <summary>
            
             </summary>
             <param name="record"></param>
             <param name="x"></param>
             <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Drop(Kaliber3D.Render.ShapeStyle,System.Double,System.Double)">
             <summary>
            
             </summary>
             <param name="style"></param>
             <param name="x"></param>
             <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.CanUndo">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.CanRedo">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.IsEditMode">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.InitializeEditor(Kaliber3D.Render.ILog,System.String)">
            <summary>
            
            </summary>
            <param name="log"></param>
            <param name="logFileName"></param>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.UpdateCanExecuteState">
             <summary>
            
             </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EditorContext.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.Commands">
             <summary>
            
             </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.Editor">
             <summary>
            
             </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.View">
             <summary>
            
             </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.Renderers">
             <summary>
            
             </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.ProjectFactory">
             <summary>
            
             </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.TextClipboard">
             <summary>
            
             </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.Serializer">
             <summary>
            
             </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.PdfWriter">
             <summary>
            
             </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.DxfWriter">
             <summary>
            
             </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.CsvReader">
             <summary>
            
             </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.CsvWriter">
             <summary>
            
             </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.RecentProjects">
             <summary>
            
             </summary>
        </member>
        <member name="P:Kaliber3D.Render.EditorContext.Invalidate">
             <summary>
            
             </summary>
        </member>
        <member name="T:Kaliber3D.Render.ProjectFactory">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.IProjectFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.IProjectFactory.GetTemplate(Kaliber3D.Render.Project,System.String)">
            <summary>
            
            </summary>
            <param name="project"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IProjectFactory.GetContainer(Kaliber3D.Render.Project,System.String)">
            <summary>
            
            </summary>
            <param name="project"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IProjectFactory.GetDocument(Kaliber3D.Render.Project,System.String)">
            <summary>
            
            </summary>
            <param name="project"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IProjectFactory.GetProject">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ProjectFactory.DefaultStyleLibrary">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ProjectFactory.LinesStyleLibrary">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ProjectFactory.TemplateStyleLibrary">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ProjectFactory.CreateGrid(Kaliber3D.Render.Project,Kaliber3D.Render.Container)">
            <summary>
            
            </summary>
            <param name="project"></param>
            <param name="container"></param>
        </member>
        <member name="M:Kaliber3D.Render.ProjectFactory.CreateGridTemplate(Kaliber3D.Render.Project,System.String)">
            <summary>
            
            </summary>
            <param name="project"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ProjectFactory.GetTemplate(Kaliber3D.Render.Project,System.String)">
            <summary>
            
            </summary>
            <param name="project"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ProjectFactory.GetContainer(Kaliber3D.Render.Project,System.String)">
             <summary>
            
             </summary>
             <param name="project"></param>
             <param name="name"></param>
             <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ProjectFactory.GetDocument(Kaliber3D.Render.Project,System.String)">
             <summary>
            
             </summary>
             <param name="project"></param>
             <param name="name"></param>
             <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ProjectFactory.GetProject">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.Factory">
            <summary>
            Factory used to create shapes.
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.IShapeFactory">
            <summary>
            Factory used to create shapes.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Point(System.Double,System.Double,System.Boolean)">
            <summary>
            Creates a new instance of the XPoint class.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="isStandalone"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Line(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates a new instance of the XLine class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="isStroked"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Line(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean)">
            <summary>
            Creates a new instance of the XLine class.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="isStroked"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Arc(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
             Creates a new instance of the XArc class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="x4"></param>
            <param name="y4"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Arc(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
             Creates a new instance of the XArc class.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Bezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the XBezier class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="x4"></param>
            <param name="y4"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Bezier(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the XBezier class.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.QBezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the XQBezier class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.QBezier(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the XQBezier class.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Geometry(Kaliber3D.Render.XFillRule)">
            <summary>
            Creates a new instance of the XPathGeometry class.
            </summary>
            <param name="fillRule"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Path(Kaliber3D.Render.XPathGeometry,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the XPath class.
            </summary>
            <param name="geometry"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Rectangle(System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of the XRectangle class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Rectangle(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of the XRectangle class.
            </summary>
            <param name="topLeft"></param>
            <param name="bottomRight"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Ellipse(System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of the XEllipse class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Ellipse(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of the XEllipse class.
            </summary>
            <param name="topLeft"></param>
            <param name="bottomRight"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Text(System.Double,System.Double,System.Double,System.Double,System.String,System.Boolean)">
            <summary>
            Creates a new instance of the XText class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="text"></param>
            <param name="isStroked"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Text(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.String,System.Boolean)">
            <summary>
            Creates a new instance of the XText class.
            </summary>
            <param name="topLeft"></param>
            <param name="bottomRight"></param>
            <param name="text"></param>
            <param name="isStroked"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Image(System.String,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of the XImage class.
            </summary>
            <param name="path"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IShapeFactory.Image(System.String,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of the XImage class.
            </summary>
            <param name="path"></param>
            <param name="topLeft"></param>
            <param name="bottomRight"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.#ctor(Kaliber3D.Render.EditorContext)">
            <summary>
            Initializes a new instance of the Factory class.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Point(System.Double,System.Double,System.Boolean)">
            <summary>
            Creates a new instance of the XPoint class.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="isStandalone"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Line(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Creates a new instance of the XLine class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="isStroked"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Line(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean)">
            <summary>
            Creates a new instance of the XLine class.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="isStroked"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Arc(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the XArc class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="x4"></param>
            <param name="y4"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Arc(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the XArc class.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Bezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the XBezier class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="x4"></param>
            <param name="y4"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Bezier(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the XBezier class.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.QBezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the XQBezier class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.QBezier(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the XQBezier class.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Geometry(Kaliber3D.Render.XFillRule)">
            <summary>
            Creates a new instance of the XPathGeometry class.
            </summary>
            <param name="fillRule"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Path(Kaliber3D.Render.XPathGeometry,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the XPath class.
            </summary>
            <param name="geometry"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Rectangle(System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of the XRectangle class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Rectangle(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of the XRectangle class.
            </summary>
            <param name="topLeft"></param>
            <param name="bottomRight"></param>
            /// <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Ellipse(System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of the XEllipse class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Ellipse(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of the XEllipse class.
            </summary>
            <param name="topLeft"></param>
            <param name="bottomRight"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Text(System.Double,System.Double,System.Double,System.Double,System.String,System.Boolean)">
            <summary>
            Creates a new instance of the XText class.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="text"></param>
            <param name="isStroked"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Text(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.String,System.Boolean)">
            <summary>
            Creates a new instance of the XText class.
            </summary>
            <param name="topLeft"></param>
            <param name="bottomRight"></param>
            <param name="text"></param>
            <param name="isStroked"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Image(System.String,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of the XImage class.
            </summary>
            <param name="path"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Factory.Image(System.String,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of the XImage class.
            </summary>
            <param name="path"></param>
            <param name="topLeft"></param>
            <param name="bottomRight"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.Factory.Context">
            <summary>
            Gets or sets editor context.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.Editor">
            <summary>
            Gets current editor.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.SelectedShape">
            <summary>
            Gets selected shape.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.SelectedShapes">
            <summary>
            Gets selected shapes.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.Project">
            <summary>
            Gets current project.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.Options">
            <summary>
            Gets current options.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.Document">
            <summary>
            Gets current document.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.Container">
            <summary>
            Gets current container.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.Layer">
            <summary>
            Gets current layer.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.Shapes">
            <summary>
            Gets current shapes.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.Shape">
            <summary>
            Gets current shape.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.Template">
            <summary>
            Gets current template.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.Database">
            <summary>
            Gets current database.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Factory.Style">
            <summary>
            Gets current style.
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ArcHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.#ctor(Kaliber3D.Render.Editor)">
            <summary>
            
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.TryToConnectPoint1(Kaliber3D.Render.XArc,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="arc"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.TryToConnectPoint2(Kaliber3D.Render.XArc,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="arc"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.TryToConnectPoint3(Kaliber3D.Render.XArc,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="arc"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.TryToConnectPoint4(Kaliber3D.Render.XArc,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="arc"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.ToStateOne">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.ToStateTwo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.ToStateThree">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.ToStateFour">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.Move(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.Finalize(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.ArcHelper.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.BezierHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.#ctor(Kaliber3D.Render.Editor)">
            <summary>
            
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.TryToConnectPoint1(Kaliber3D.Render.XBezier,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="bezier"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.TryToConnectPoint2(Kaliber3D.Render.XBezier,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="bezier"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.TryToConnectPoint3(Kaliber3D.Render.XBezier,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="bezier"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.TryToConnectPoint4(Kaliber3D.Render.XBezier,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="bezier"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.ToStateOne">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.ToStateTwo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.ToStateThree">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.ToStateFour">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.Move(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.Finalize(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.BezierHelper.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.EllipseHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.#ctor(Kaliber3D.Render.Editor)">
            <summary>
            
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.TryToConnectTopLeft(Kaliber3D.Render.XEllipse,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="ellipse"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.TryToConnectBottomRight(Kaliber3D.Render.XEllipse,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="ellipse"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.ToStateOne">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.ToStateTwo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.ToStateThree">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.ToStateFour">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.Move(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.Finalize(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.EllipseHelper.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ImageHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.#ctor(Kaliber3D.Render.Editor)">
            <summary>
            
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.TryToConnectTopLeft(Kaliber3D.Render.XImage,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.TryToConnectBottomRight(Kaliber3D.Render.XImage,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.ToStateOne">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.ToStateTwo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.ToStateThree">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.ToStateFour">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.Move(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.Finalize(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.ImageHelper.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.LineHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.#ctor(Kaliber3D.Render.Editor)">
            <summary>
            
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.TryToConnectStart(Kaliber3D.Render.XLine,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="line"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.TryToConnectEnd(Kaliber3D.Render.XLine,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="line"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.ToStateOne">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.ToStateTwo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.ToStateThree">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.ToStateFour">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.Move(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.Finalize(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.LineHelper.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.PathHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.#ctor(Kaliber3D.Render.Editor)">
            <summary>
            
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.TryToGetConnectionPoint(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.ToStateOne">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.ToStateTwo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.ToStateThree">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.ToStateFour">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.Move(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.Finalize(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.PathHelper.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.PointHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.#ctor(Kaliber3D.Render.Editor)">
            <summary>
            
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.ToStateOne">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.ToStateTwo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.ToStateThree">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.ToStateFour">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.Move(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.Finalize(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.PointHelper.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.QBezierHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.#ctor(Kaliber3D.Render.Editor)">
            <summary>
            
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.TryToConnectPoint1(Kaliber3D.Render.XQBezier,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="qbezier"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.TryToConnectPoint2(Kaliber3D.Render.XQBezier,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="qbezier"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.TryToConnectPoint3(Kaliber3D.Render.XQBezier,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="qbezier"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.ToStateOne">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.ToStateTwo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.ToStateThree">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.ToStateFour">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.Move(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.Finalize(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.QBezierHelper.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.RectangleHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.#ctor(Kaliber3D.Render.Editor)">
            <summary>
            
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.TryToConnectTopLeft(Kaliber3D.Render.XRectangle,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="rectangle"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.TryToConnectBottomRight(Kaliber3D.Render.XRectangle,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="rectangle"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.ToStateOne">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.ToStateTwo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.ToStateThree">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.ToStateFour">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.Move(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.Finalize(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.RectangleHelper.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.SelectionHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.#ctor(Kaliber3D.Render.Editor)">
            <summary>
            
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.GenerateMoveSelectionCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.DisposeMoveSelectionCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.MoveSelectionTo(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.ToStateOne">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.ToStateTwo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.ToStateThree">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.ToStateFour">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.Move(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.Finalize(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.SelectionHelper.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.TextHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.#ctor(Kaliber3D.Render.Editor)">
            <summary>
            
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.TryToConnectTopLeft(Kaliber3D.Render.XText,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.TryToConnectBottomRight(Kaliber3D.Render.XText,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.LeftDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.LeftUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.RightDown(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.RightUp(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.ToStateOne">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.ToStateTwo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.ToStateThree">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.ToStateFour">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.Move(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.Finalize(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.TextHelper.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Observer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Observer.#ctor(Kaliber3D.Render.Editor)">
            <summary>
            
            </summary>
            <param name="editor"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.MarkAsDirty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Observer.DatabaseObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.ColumnObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.RecordObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.ValueObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.ProjectObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.DocumentObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.ContainerObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.ContainerBackgroudObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.LayerObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.ShapeObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.StyleLibraryObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.GroupLibraryObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.StyleObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.BindingObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.PropertyObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.DataObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.StateObserver(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.Database)">
            <summary>
            
            </summary>
            <param name="database"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.Database)">
            <summary>
            
            </summary>
            <param name="database"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.Column)">
            <summary>
            
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.Column)">
            <summary>
            
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.Value)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.Value)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.Options)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.Options)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.Project)">
            <summary>
            
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.Project)">
            <summary>
            
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.Document)">
            <summary>
            
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.Document)">
            <summary>
            
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.Container)">
            <summary>
            
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.Container)">
            <summary>
            
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.Layer)">
            <summary>
            
            </summary>
            <param name="layer"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.Layer)">
            <summary>
            
            </summary>
            <param name="layer"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.StyleLibrary)">
            <summary>
            
            </summary>
            <param name="sg"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.StyleLibrary)">
            <summary>
            
            </summary>
            <param name="sg"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.GroupLibrary)">
            <summary>
            
            </summary>
            <param name="gl"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.GroupLibrary)">
            <summary>
            
            </summary>
            <param name="gl"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.ShapeStyle)">
            <summary>
            
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.ShapeStyle)">
            <summary>
            
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.ShapeBinding)">
            <summary>
            
            </summary>
            <param name="binding"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.ShapeBinding)">
            <summary>
            
            </summary>
            <param name="binding"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(Kaliber3D.Render.ShapeProperty)">
            <summary>
            
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(Kaliber3D.Render.ShapeProperty)">
            <summary>
            
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Database})">
            <summary>
            
            </summary>
            <param name="databases"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Database})">
            <summary>
            
            </summary>
            <param name="databases"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Column})">
            <summary>
            
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Column})">
            <summary>
            
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Record})">
            <summary>
            
            </summary>
            <param name="records"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Record})">
            <summary>
            
            </summary>
            <param name="records"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Value})">
            <summary>
            
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Value})">
            <summary>
            
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Document})">
            <summary>
            
            </summary>
            <param name="documents"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Document})">
            <summary>
            
            </summary>
            <param name="documents"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Container})">
            <summary>
            
            </summary>
            <param name="containers"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Container})">
            <summary>
            
            </summary>
            <param name="containers"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Layer})">
            <summary>
            
            </summary>
            <param name="layers"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.Layer})">
            <summary>
            
            </summary>
            <param name="layers"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape})">
            <summary>
            
            </summary>
            <param name="shapes"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape})">
            <summary>
            
            </summary>
            <param name="shapes"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.ShapeStyle})">
            <summary>
            
            </summary>
            <param name="styles"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.ShapeStyle})">
            <summary>
            
            </summary>
            <param name="styles"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.StyleLibrary})">
            <summary>
            
            </summary>
            <param name="sgs"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.StyleLibrary})">
            <summary>
            
            </summary>
            <param name="sgs"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.GroupLibrary})">
            <summary>
            
            </summary>
            <param name="gl"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.GroupLibrary})">
            <summary>
            
            </summary>
            <param name="gl"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.ShapeBinding})">
            <summary>
            
            </summary>
            <param name="bindings"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.ShapeBinding})">
            <summary>
            
            </summary>
            <param name="bindings"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Add(System.Collections.Generic.IEnumerable{Kaliber3D.Render.ShapeProperty})">
            <summary>
            
            </summary>
            <param name="properties"></param>
        </member>
        <member name="M:Kaliber3D.Render.Observer.Remove(System.Collections.Generic.IEnumerable{Kaliber3D.Render.ShapeProperty})">
            <summary>
            
            </summary>
            <param name="properties"></param>
        </member>
        <member name="P:Kaliber3D.Render.Observer.IsPaused">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ColumnParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ColumnParameter.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ColumnParameter.Column">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.RecordParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.RecordParameter.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.RecordParameter.Record">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ShapeBindingParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeBindingParameter.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeBindingParameter.Binding">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ShapePropertyParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapePropertyParameter.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapePropertyParameter.Property">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ValueParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ValueParameter.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ValueParameter.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.IFileWriter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.IFileWriter.Save(System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="item"></param>
            <param name="options"></param>
        </member>
        <member name="T:Kaliber3D.Render.ILog">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ILog.Initialize(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Kaliber3D.Render.ILog.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ILog.LogInformation(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Kaliber3D.Render.ILog.LogInformation(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Kaliber3D.Render.ILog.LogWarning(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Kaliber3D.Render.ILog.LogWarning(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Kaliber3D.Render.ILog.LogError(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Kaliber3D.Render.ILog.LogError(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="P:Kaliber3D.Render.ILog.LastMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ISerializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ISerializer.Serialize``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ISerializer.Deserialize``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.ITextClipboard">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ITextClipboard.ContainsText">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ITextClipboard.GetText">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ITextClipboard.SetText(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.ITextFieldReader`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Kaliber3D.Render.ITextFieldReader`1.Read(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.ITextFieldWriter`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Kaliber3D.Render.ITextFieldWriter`1.Write(System.String,`0)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="database"></param>
        </member>
        <member name="T:Kaliber3D.Render.IView">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.IView.Close">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.IView.DataContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Utf8TextFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Utf8TextFile.Read(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Utf8TextFile.Write(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="text"></param>
        </member>
        <member name="T:Kaliber3D.Render.GdiArc">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.GdiArc.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.GdiArc.Y">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.GdiArc.Width">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.GdiArc.Height">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.GdiArc.RadiusX">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.GdiArc.RadiusY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.GdiArc.StartAngle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.GdiArc.EndAngle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.GdiArc.SweepAngle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.GdiArc.FromXArc(Kaliber3D.Render.XArc,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="arc"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.GdiArc.FromXArc(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
            <param name="p4"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.WpfArc">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.WpfArc.P1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.WpfArc.P2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.WpfArc.P3">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.WpfArc.P4">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.WpfArc.Rect">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.WpfArc.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.WpfArc.Start">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.WpfArc.End">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.WpfArc.Radius">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.WpfArc.IsLargeArc">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.WpfArc.Angle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.WpfArc.FromXArc(Kaliber3D.Render.XArc,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="arc"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.Point2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Point2.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Point2.Y">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Point2.#ctor(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.Point2.Distance(Kaliber3D.Render.Point2)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Point2.Distance(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Point2.RotateAt(Kaliber3D.Render.Point2,System.Double)">
            <summary>
            
            </summary>
            <param name="centerPoint"></param>
            <param name="angleInDegrees"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Point2.Create(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.Polygon2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Polygon2.Points">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Polygon2.Contains(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Polygon2.Contains(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.Rect2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Rect2.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Rect2.Y">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Rect2.Width">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Rect2.Height">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Rect2.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Kaliber3D.Render.Rect2.Contains(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Rect2.IntersectsWith(Kaliber3D.Render.Rect2)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Rect2.Create(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Rect2.Create(Kaliber3D.Render.Point2,Kaliber3D.Render.Point2,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="tl"></param>
            <param name="br"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Rect2.Create(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="tl"></param>
            <param name="br"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.Rect2.Left">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Rect2.Right">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Rect2.Top">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Rect2.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Size2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Size2.Width">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Size2.Height">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Size2.#ctor(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Kaliber3D.Render.Size2.Create(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.Vector2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Vector2.RadiansToDegrees">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.Vector2.DegreesToRadians">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.#ctor(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.#ctor(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.op_LessThan(Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.op_GreaterThan(Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.CompareTo(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Equals(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Negate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Perpendicular">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Subtract(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Add(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Multiply(System.Double)">
            <summary>
            
            </summary>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Multiply(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Divide(System.Double)">
            <summary>
            
            </summary>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Divide(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Dot(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Angle(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Cross(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.op_Equality(Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.op_Inequality(Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.op_UnaryNegation(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.op_Subtraction(Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.op_Addition(Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.op_Multiply(Kaliber3D.Render.Vector2,System.Double)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.op_Multiply(System.Double,Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="scalar"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.op_Multiply(Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.op_Division(Kaliber3D.Render.Vector2,System.Double)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="scalar"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.op_Division(Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Magnitude">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.MagnitudeSquared">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Length">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.LengthSquared">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Normalize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Project(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Reflect(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="normal"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Min(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Max(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Lerp(Kaliber3D.Render.Vector2,System.Double)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Slerp(Kaliber3D.Render.Vector2,System.Double)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Nlerp(Kaliber3D.Render.Vector2,System.Double)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Distance(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Middle(Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.NearestPointOnLine(Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Vector2.Clamp(System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.Vector2.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Vector2.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Vector2.One">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Vector2.Zero">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Vector2.UnitX">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Vector2.UnitY">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.MathHelpers">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.MathHelpers.DegreesToRadians(System.Double)">
            <summary>
            Converts an angle in decimal degress to radians.
            </summary>
            <param name="angleInDegrees">Angle in decimal degrees.</param>
            <returns>Angle in radians.</returns>
        </member>
        <member name="M:Kaliber3D.Render.MathHelpers.RadiansToDegrees(System.Double)">
            <summary>
            Converts an angle in radians to decimal degress.
            </summary>
            <param name="angleInRadians">Angle in radians</param>
            <returns>Angle in decimal degrees.</returns>
        </member>
        <member name="M:Kaliber3D.Render.MathHelpers.AngleLineSegments(Kaliber3D.Render.Point2,Kaliber3D.Render.Point2,Kaliber3D.Render.Point2,Kaliber3D.Render.Point2)">
            <summary>
            
            </summary>
            <param name="line1Start"></param>
            <param name="line1End"></param>
            <param name="line2Start"></param>
            <param name="line2End"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.MathHelpers.FindEllipseSegmentIntersections(Kaliber3D.Render.Rect2,Kaliber3D.Render.Point2,Kaliber3D.Render.Point2,System.Boolean)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="onlySegment"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.MathHelpers.Distance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.MathHelpers.Middle(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.MathHelpers.NearestPointOnLine(Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.MathHelpers.LineIntersectsWithRect(Kaliber3D.Render.Rect2,Kaliber3D.Render.Point2,Kaliber3D.Render.Point2)">
            <summary>
            Check if line intersects with rectangle using Liang-Barsky line clipping algorithm.
            </summary>
            <param name="rect"></param>
            <param name="p0"></param>
            <param name="p1"></param>
            <returns>True if line intersects with rectangle.</returns>
        </member>
        <member name="T:Kaliber3D.Render.MonotoneChain">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.MonotoneChain.Cross(Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2,Kaliber3D.Render.Vector2)">
            <summary>
            2D cross product of OA and OB vectors, i.e. z-component of their 3D cross product.
            Returns a positive value, if OAB makes a counter-clockwise turn,
            negative for clockwise turn, and zero if the vertices are collinear.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.MonotoneChain.ConvexHull(Kaliber3D.Render.Vector2[],Kaliber3D.Render.Vector2[]@,System.Int32@)">
            <summary>
            Returns a list of vertices on the convex hull in counter-clockwise order.
            Note: the last vertice in the returned list is the same as the first one.
            </summary>
            <param name="vertices"></param>
            <param name="hull"></param>
            <param name="k"></param>
        </member>
        <member name="T:Kaliber3D.Render.Projection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Projection.#ctor(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="M:Kaliber3D.Render.Projection.Overlap(Kaliber3D.Render.Projection)">
            <summary>
            
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Projection.GetOverlap(Kaliber3D.Render.Projection)">
            <summary>
            
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Projection.Contains(Kaliber3D.Render.Projection)">
            <summary>
            
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.Projection.Min">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Projection.Max">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.MinimumTranslationVector">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.MinimumTranslationVector.#ctor(Kaliber3D.Render.Vector2,System.Double)">
            <summary>
            
            </summary>
            <param name="smallest"></param>
            <param name="overlap"></param>
        </member>
        <member name="P:Kaliber3D.Render.MinimumTranslationVector.Smallest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.MinimumTranslationVector.Overlap">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.SeparatingAxisTheorem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.SeparatingAxisTheorem.GetAxes(Kaliber3D.Render.Vector2[])">
            <summary>
            
            </summary>
            <param name="vertices"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.SeparatingAxisTheorem.Project(Kaliber3D.Render.Vector2[],Kaliber3D.Render.Vector2)">
            <summary>
            
            </summary>
            <param name="vertices"></param>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.SeparatingAxisTheorem.Overlap(Kaliber3D.Render.Vector2[],Kaliber3D.Render.Vector2[])">
            <summary>
            
            </summary>
            <param name="vertices1"></param>
            <param name="vertices2"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.SeparatingAxisTheorem.MinimumTranslationVector(Kaliber3D.Render.Vector2[],Kaliber3D.Render.Vector2[],System.Nullable{Kaliber3D.Render.MinimumTranslationVector}@)">
            <summary>
            
            </summary>
            <param name="vertices1"></param>
            <param name="vertices2"></param>
            <param name="mtv"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.SeparatingAxisTheorem.MinimumTranslationVectorWithContainment(Kaliber3D.Render.Vector2[],Kaliber3D.Render.Vector2[],System.Nullable{Kaliber3D.Render.MinimumTranslationVector}@)">
            <summary>
            
            </summary>
            <param name="vertices1"></param>
            <param name="vertices2"></param>
            <param name="mtv"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.Column">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Column.Create(System.String,System.Double,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="width"></param>
            <param name="isVisible"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.Column.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Column.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Column.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Column.IsVisible">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Database">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Database.Create(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Database.Create(System.String,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.Column})">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="columns"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Database.Create(System.String,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.Column},System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.Record})">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="columns"></param>
            <param name="records"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Database.Create(System.String,System.Collections.Generic.IEnumerable{System.String[]})">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.Database.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Database.Columns">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Database.Records">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Database.CurrentRecord">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Record">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Record.Create(System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.Column},System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.Value})">
            <summary>
            
            </summary>
            <param name="columns"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Record.Create(System.String,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.Column},System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.Value})">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="columns"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.Record.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Record.Columns">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Record.Values">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Value.Create(System.String)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.Value.Content">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.GroupLibrary">
            <summary>
            Named XGroup shapes collection.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.GroupLibrary.Create(System.String)">
            <summary>
            Creates a new instance of the GroupLibrary class.
            </summary>
            <param name="name">The group library name.</param>
            <returns>The new instance of the GroupLibrary class.</returns>
        </member>
        <member name="P:Kaliber3D.Render.GroupLibrary.Name">
            <summary>
            Gets or sets group library name.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.GroupLibrary.Groups">
            <summary>
            Gets or sets a colletion XGroup.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.GroupLibrary.CurrentGroup">
            <summary>
            Gets or sets currenly selected group from Groups collection.
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.StyleLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.StyleLibrary.Create(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.StyleLibrary.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.StyleLibrary.Styles">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.StyleLibrary.CurrentStyle">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Container">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Container.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Container.Invalidate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Container.Create(System.String,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.Container.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Container.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Container.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Container.Background">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Container.Properties">
            <summary>
            Gets or sets a colletion ShapeProperty that will be used during drawing.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Container.Item(System.String)">
            <summary>
            Gets or sets property Value using Name as key for Properties array values. If property with the specified key does not exist it is created.
            </summary>
            <param name="name">The property name value.</param>
            <returns>The property Value.</returns>
        </member>
        <member name="P:Kaliber3D.Render.Container.Layers">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Container.Template">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Container.CurrentLayer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Container.WorkingLayer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Container.HelperLayer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Container.CurrentShape">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Container.IsTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Document">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Document.Create(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.Document.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Document.Containers">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.InvalidateLayerEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.InvalidateLayerEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Kaliber3D.Render.Layer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Layer.Invalidate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Layer.Create(System.String,Kaliber3D.Render.Container,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="isVisible"></param>
            <returns></returns>
        </member>
        <member name="E:Kaliber3D.Render.Layer.InvalidateLayer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Layer.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Layer.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Layer.IsVisible">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Layer.Shapes">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.MoveMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.MoveMode.Point">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.MoveMode.Shape">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Options">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Options.Create">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Options.EllipsePointShape(Kaliber3D.Render.ShapeStyle)">
            <summary>
            
            </summary>
            <param name="pss"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Options.FilledEllipsePointShape(Kaliber3D.Render.ShapeStyle)">
            <summary>
            
            </summary>
            <param name="pss"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Options.RectanglePointShape(Kaliber3D.Render.ShapeStyle)">
            <summary>
            
            </summary>
            <param name="pss"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Options.FilledRectanglePointShape(Kaliber3D.Render.ShapeStyle)">
            <summary>
            
            </summary>
            <param name="pss"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Options.CrossPointShape(Kaliber3D.Render.ShapeStyle)">
            <summary>
            
            </summary>
            <param name="pss"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.Options.MoveModeValues">
            <summary>
            The MoveMode enum values.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.XFillRuleValues">
            <summary>
            The XFillRule enum values.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.SnapToGrid">
            <summary>
            Gets or sets how grid snapping is handled. 
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.SnapX">
            <summary>
            Gets or sets how much grid X axis is snapped.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.SnapY">
            <summary>
            Gets or sets how much grid Y axis is snapped.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.HitTreshold">
            <summary>
            Gets or sets hit test treshold radius.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.MoveMode">
            <summary>
            Gets or sets how selected shapes are moved.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.DefaultIsStroked">
            <summary>
            Gets or sets value indicating whether path/shape is stroked during creation.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.DefaultIsFilled">
            <summary>
            Gets or sets value indicating whether path/shape is filled during creation.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.DefaultIsClosed">
            <summary>
            Gets or sets value indicating whether path is closed during creation.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.DefaultIsSmoothJoin">
            <summary>
            Gets or sets value indicating whether path segment is smooth join during creation.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.DefaultFillRule">
            <summary>
            Gets or sets value indicating path fill rule during creation.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.TryToConnect">
            <summary>
            Gets or sets how point connection is handled.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.PointShape">
            <summary>
            Gets or sets shape used to draw points.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.PointStyle">
            <summary>
            Gets or sets point shape style.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.SelectionStyle">
            <summary>
            Gets or sets selection rectangle style.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Options.HelperStyle">
            <summary>
            Gets or sets editor helper shapes style.
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.Project">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.IImageCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.IImageCache.AddImageFromFile(System.String,System.Byte[])">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IImageCache.AddImage(System.String,System.Byte[])">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="bytes"></param>
        </member>
        <member name="M:Kaliber3D.Render.IImageCache.GetImage(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.IImageCache.RemoveImage(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Kaliber3D.Render.IImageCache.PurgeUnusedImages(System.Collections.Generic.ICollection{System.String})">
            <summary>
            
            </summary>
            <param name="used"></param>
        </member>
        <member name="M:Kaliber3D.Render.Project.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.Project.AddImageFromFile(System.String,System.Byte[])">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Project.AddImage(System.String,System.Byte[])">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="bytes"></param>
        </member>
        <member name="M:Kaliber3D.Render.Project.GetImage(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Project.RemoveImage(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Kaliber3D.Render.Project.PurgeUnusedImages(System.Collections.Generic.ICollection{System.String})">
            <summary>
            
            </summary>
            <param name="used"></param>
        </member>
        <member name="M:Kaliber3D.Render.Project.Open(System.String,Kaliber3D.Render.ISerializer)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Project.Open(System.IO.Stream,Kaliber3D.Render.ISerializer)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Project.Save(System.String,Kaliber3D.Render.Project,Kaliber3D.Render.ISerializer)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="project"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Project.Save(System.IO.Stream,Kaliber3D.Render.Project,Kaliber3D.Render.ISerializer)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="project"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:Kaliber3D.Render.Project.ReadBinary(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Project.WriteBinary(System.IO.Stream,System.Byte[])">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="bytes"></param>
        </member>
        <member name="M:Kaliber3D.Render.Project.ReadUtf8Text(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.Project.WriteUtf8Text(System.IO.Stream,System.String)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="text"></param>
        </member>
        <member name="M:Kaliber3D.Render.Project.Create(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.Project.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.Options">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.CurrentDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.Databases">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.StyleLibraries">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.CurrentStyleLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.GroupLibraries">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.CurrentGroupLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.Templates">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.CurrentTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.Documents">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.CurrentDocument">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.CurrentContainer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.Project.Selected">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.IRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.IRenderer.ClearCache(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isZooming"></param>
        </member>
        <member name="M:Kaliber3D.Render.IRenderer.Draw(System.Object,Kaliber3D.Render.Container,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="container"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.IRenderer.Draw(System.Object,Kaliber3D.Render.Layer,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="layer"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.IRenderer.Draw(System.Object,Kaliber3D.Render.XLine,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="line"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.IRenderer.Draw(System.Object,Kaliber3D.Render.XRectangle,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="rectangle"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.IRenderer.Draw(System.Object,Kaliber3D.Render.XEllipse,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="ellipse"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.IRenderer.Draw(System.Object,Kaliber3D.Render.XArc,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="arc"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.IRenderer.Draw(System.Object,Kaliber3D.Render.XBezier,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="bezier"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.IRenderer.Draw(System.Object,Kaliber3D.Render.XQBezier,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="qbezier"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.IRenderer.Draw(System.Object,Kaliber3D.Render.XText,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="text"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.IRenderer.Draw(System.Object,Kaliber3D.Render.XImage,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="image"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.IRenderer.Draw(System.Object,Kaliber3D.Render.XPath,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="path"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="P:Kaliber3D.Render.IRenderer.State">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.RendererState">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.RendererState.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.RendererState.PanX">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.RendererState.PanY">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.RendererState.Zoom">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.RendererState.EnableAutofit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.RendererState.DrawShapeState">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.RendererState.SelectedShape">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.RendererState.SelectedShapes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.RendererState.ImageCache">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XArcSegment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XPathSegment">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XPathSegment.IsStroked">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XPathSegment.IsSmoothJoin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XArcSegment.Create(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPathSize,System.Double,System.Boolean,Kaliber3D.Render.XSweepDirection,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="size"></param>
            <param name="rotationAngle"></param>
            <param name="isLargeArc"></param>
            <param name="sweepDirection"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XArcSegment.XSweepDirectionValues">
            <summary>
            The XSweepDirection enum values.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XArcSegment.Point">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XArcSegment.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XArcSegment.RotationAngle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XArcSegment.IsLargeArc">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XArcSegment.SweepDirection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XBezierSegment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XBezierSegment.Create(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XBezierSegment.Point1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XBezierSegment.Point2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XBezierSegment.Point3">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XLineSegment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XLineSegment.Create(Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XLineSegment.Point">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XPolyBezierSegment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XPolyBezierSegment.Create(System.Collections.Generic.IList{Kaliber3D.Render.XPoint},System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XPolyBezierSegment.Points">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XPolyLineSegment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XPolyLineSegment.Create(System.Collections.Generic.IList{Kaliber3D.Render.XPoint},System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XPolyLineSegment.Points">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XPolyQuadraticBezierSegment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XPolyQuadraticBezierSegment.Create(System.Collections.Generic.IList{Kaliber3D.Render.XPoint},System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XPolyQuadraticBezierSegment.Points">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XQuadraticBezierSegment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XQuadraticBezierSegment.Create(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XQuadraticBezierSegment.Point1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XQuadraticBezierSegment.Point2">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XFillRule">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.XFillRule.Nonzero">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.XFillRule.EvenOdd">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XPathFigure">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XPathFigure.Create(Kaliber3D.Render.XPoint,System.Collections.Generic.IList{Kaliber3D.Render.XPathSegment},System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="startPoint"></param>
            <param name="segments"></param>
            <param name="isFilled"></param>
            <param name="isClosed"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XPathFigure.StartPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XPathFigure.Segments">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XPathFigure.IsFilled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XPathFigure.IsClosed">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XPathGeometry">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XPathGeometry.Create(System.Collections.Generic.IList{Kaliber3D.Render.XPathFigure},Kaliber3D.Render.XFillRule)">
            <summary>
            
            </summary>
            <param name="figures"></param>
            <param name="fillRule"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XPathGeometry.BeginFigure(Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="startPoint"></param>
            <param name="isFilled"></param>
            <param name="isClosed"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPathGeometry.LineTo(Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPathGeometry.ArcTo(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPathSize,System.Double,System.Boolean,Kaliber3D.Render.XSweepDirection,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="size"></param>
            <param name="rotationAngle"></param>
            <param name="isLargeArc"></param>
            <param name="sweepDirection"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPathGeometry.BezierTo(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPathGeometry.QuadraticBezierTo(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPathGeometry.PolyLineTo(System.Collections.Generic.IList{Kaliber3D.Render.XPoint},System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPathGeometry.PolyBezierTo(System.Collections.Generic.IList{Kaliber3D.Render.XPoint},System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPathGeometry.PolyQuadraticBezierTo(System.Collections.Generic.IList{Kaliber3D.Render.XPoint},System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="isStroked"></param>
            <param name="isSmoothJoin"></param>
        </member>
        <member name="P:Kaliber3D.Render.XPathGeometry.XFillRuleValues">
            <summary>
            The XFillRule enum values.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XPathGeometry.Figures">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XPathGeometry.FillRule">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XPathSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XPathSize.Create(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XPathSize.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XPathSize.Height">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XSweepDirection">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.XSweepDirection.Clockwise">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.XSweepDirection.Counterclockwise">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XArc">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.BaseShape">
            <summary>
            Base class for Kaliber3D.Render shapes.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.BaseShape.Bind(Kaliber3D.Render.Record)">
            <summary>
            Binding shape properties to Record data.
            </summary>
            <param name="r">The external data record used for binding.</param>
        </member>
        <member name="M:Kaliber3D.Render.BaseShape.Draw(System.Object,Kaliber3D.Render.IRenderer,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            Draw shape using current renderer.
            </summary>
            <param name="dc">The generic drawing context object</param>
            <param name="renderer">The generic renderer object used to draw shape.</param>
            <param name="dx">The X axis draw position offset.</param>
            <param name="dy">The Y axis draw position offset.</param>
            <param name="db">The properties database used for binding.</param>
            <param name="r">The external data record used for binding.</param>
        </member>
        <member name="M:Kaliber3D.Render.BaseShape.Move(System.Double,System.Double)">
            <summary>
            Move shape position using dx,dy offset.
            </summary>
            <param name="dx">The X axis position offset.</param>
            <param name="dy">The Y axis position offset.</param>
        </member>
        <member name="P:Kaliber3D.Render.BaseShape.Name">
            <summary>
            Gets or sets shape name.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseShape.Owner">
            <summary>
            Gets or sets shape owner shape.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseShape.State">
            <summary>
            Indicates shape state options.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseShape.Style">
            <summary>
            Get or sets shape drawing style.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseShape.IsStroked">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseShape.IsFilled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseShape.Data">
            <summary>
            Gets or sets shape data.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XArc.Bind(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XArc.Draw(System.Object,Kaliber3D.Render.IRenderer,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="renderer"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XArc.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Kaliber3D.Render.XArc.Create(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="x4"></param>
            <param name="y4"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XArc.Create(System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XArc.Create(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XArc.Point1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XArc.Point2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XArc.Point3">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XArc.Point4">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XBezier">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XBezier.Bind(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XBezier.Draw(System.Object,Kaliber3D.Render.IRenderer,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="renderer"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XBezier.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Kaliber3D.Render.XBezier.Create(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="x4"></param>
            <param name="y4"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XBezier.Create(System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XBezier.Create(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="point4"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XBezier.Point1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XBezier.Point2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XBezier.Point3">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XBezier.Point4">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XEllipse">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XText">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XText.Bind(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XText.Draw(System.Object,Kaliber3D.Render.IRenderer,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="renderer"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XText.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Kaliber3D.Render.XText.TryToBind(System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeBinding},Kaliber3D.Render.Record,System.String,System.String@)">
            <summary>
            
            </summary>
            <param name="bindings"></param>
            <param name="r"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XText.TryToBind(System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeBinding},System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},System.String,System.String@)">
            <summary>
            
            </summary>
            <param name="bindings"></param>
            <param name="db"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XText.ToArgs(System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty})">
            <summary>
            
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XText.BindToTextProperty(System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="db"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XText.Create(System.Double,System.Double,System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.String,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="text"></param>
            <param name="isStroked"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XText.Create(System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.String,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="text"></param>
            <param name="isStroked"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XText.Create(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.String,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="topLeft"></param>
            <param name="bottomRight"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="text"></param>
            <param name="isStroked"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XText.TopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XText.BottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XText.Text">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XEllipse.Bind(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XEllipse.Draw(System.Object,Kaliber3D.Render.IRenderer,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="renderer"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XEllipse.Create(System.Double,System.Double,System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XEllipse.Create(System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XEllipse.Create(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="topLeft"></param>
            <param name="bottomRight"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.XGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XGroup.Bind(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XGroup.Draw(System.Object,Kaliber3D.Render.IRenderer,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="renderer"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XGroup.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Kaliber3D.Render.XGroup.AddShape(Kaliber3D.Render.BaseShape)">
            <summary>
            
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Kaliber3D.Render.XGroup.AddConnectorAsNone(Kaliber3D.Render.XPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Kaliber3D.Render.XGroup.AddConnectorAsInput(Kaliber3D.Render.XPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Kaliber3D.Render.XGroup.AddConnectorAsOutput(Kaliber3D.Render.XPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Kaliber3D.Render.XGroup.Create(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XGroup.Group(System.String,System.Collections.Generic.IEnumerable{Kaliber3D.Render.BaseShape})">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="shapes"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XGroup.ShapesProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XGroup.Shapes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XGroup.Connectors">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XImage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XImage.Bind(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XImage.Draw(System.Object,Kaliber3D.Render.IRenderer,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="renderer"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XImage.Create(System.Double,System.Double,System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="path"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XImage.Create(System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="path"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XImage.Create(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="topLeft"></param>
            <param name="bottomRight"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="path"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XImage.Path">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XLine">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XLine.Bind(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XLine.Draw(System.Object,Kaliber3D.Render.IRenderer,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="renderer"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XLine.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Kaliber3D.Render.XLine.Create(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XLine.Create(System.Double,System.Double,System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XLine.Create(System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XLine.SetMaxLength(Kaliber3D.Render.XLine,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            
            </summary>
            <param name="line"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Kaliber3D.Render.XLine.SetMaxLengthAll(Kaliber3D.Render.XLine,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            
            </summary>
            <param name="line"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Kaliber3D.Render.XLine.SetMaxLengthHorizontal(Kaliber3D.Render.XLine,System.Double@,System.Double@)">
            <summary>
            
            </summary>
            <param name="line"></param>
            <param name="x1"></param>
            <param name="x2"></param>
        </member>
        <member name="M:Kaliber3D.Render.XLine.SetMaxLengthVertical(Kaliber3D.Render.XLine,System.Double@,System.Double@)">
            <summary>
            
            </summary>
            <param name="line"></param>
            <param name="y1"></param>
            <param name="y2"></param>
        </member>
        <member name="P:Kaliber3D.Render.XLine.Start">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XLine.End">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XPath">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XPath.Bind(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPath.GetAllPoints">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XPath.Draw(System.Object,Kaliber3D.Render.IRenderer,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="renderer"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPath.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPath.Create(System.String,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.XPathGeometry,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="style"></param>
            <param name="geometry"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XPath.Geometry">
            <summary>
            Gets or sets path geometry used to draw shape.
            </summary>
            <remarks>
            Geometry is based on path markup syntax.
            XAML abbreviated geometry https://msdn.microsoft.com/en-us/library/ms752293(v=vs.110).aspx
            SVG path specification http://www.w3.org/TR/SVG11/paths.html
            </remarks>
        </member>
        <member name="T:Kaliber3D.Render.XPoint">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XPoint.BindToDouble(Kaliber3D.Render.ShapeBinding,Kaliber3D.Render.Record,System.Double@)">
            <summary>
            
            </summary>
            <param name="binding"></param>
            <param name="r"></param>
            <param name="value"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPoint.TryToBind(System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeBinding},Kaliber3D.Render.Record,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="bindings"></param>
            <param name="r"></param>
            <param name="propertyNameX"></param>
            <param name="propertyNameY"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPoint.TryToBind(System.String,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeBinding},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
            <param name="bindings"></param>
            <param name="record"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPoint.Bind(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPoint.Draw(System.Object,Kaliber3D.Render.IRenderer,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="renderer"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPoint.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Kaliber3D.Render.XPoint.Create(System.Double,System.Double,Kaliber3D.Render.BaseShape,System.String)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="shape"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XPoint.Distance(Kaliber3D.Render.XPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XPoint.Shape">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XPoint.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XPoint.Y">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XQBezier">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XQBezier.Bind(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XQBezier.Draw(System.Object,Kaliber3D.Render.IRenderer,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="renderer"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XQBezier.Move(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:Kaliber3D.Render.XQBezier.Create(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XQBezier.Create(System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XQBezier.Create(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="point3"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XQBezier.Point1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XQBezier.Point2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XQBezier.Point3">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.XRectangle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.XRectangle.Bind(Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XRectangle.Draw(System.Object,Kaliber3D.Render.IRenderer,System.Double,System.Double,System.Collections.Immutable.ImmutableArray{Kaliber3D.Render.ShapeProperty},Kaliber3D.Render.Record)">
            <summary>
            
            </summary>
            <param name="dc"></param>
            <param name="renderer"></param>
            <param name="dx"></param>
            <param name="dy"></param>
            <param name="db"></param>
            <param name="r"></param>
        </member>
        <member name="M:Kaliber3D.Render.XRectangle.Create(System.Double,System.Double,System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XRectangle.Create(System.Double,System.Double,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.XRectangle.Create(Kaliber3D.Render.XPoint,Kaliber3D.Render.XPoint,Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.BaseShape,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="topLeft"></param>
            <param name="bottomRight"></param>
            <param name="style"></param>
            <param name="point"></param>
            <param name="isStroked"></param>
            <param name="isFilled"></param>
            <param name="text"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.XRectangle.IsGrid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XRectangle.OffsetX">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XRectangle.OffsetY">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XRectangle.CellWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.XRectangle.CellHeight">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ShapeBinding">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBinding.Create(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="property"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeBinding.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.ShapeBinding.Property">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeBinding.Path">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ShapeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ShapeProperty.Create(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeProperty.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.ShapeProperty.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeProperty.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ShapeState">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ShapeState.Create(Kaliber3D.Render.ShapeStateFlags)">
            <summary>
            
            </summary>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.ShapeState.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeState.Default">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeState.Visible">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeState.Printable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeState.Locked">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeState.Connector">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeState.None">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeState.Standalone">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeState.Input">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeState.Output">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ShapeStateFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ShapeStateFlags.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ShapeStateFlags.Visible">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ShapeStateFlags.Printable">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ShapeStateFlags.Locked">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ShapeStateFlags.Connector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ShapeStateFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ShapeStateFlags.Standalone">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ShapeStateFlags.Input">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ShapeStateFlags.Output">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ArgbColor">
            <summary>
            Specifies the Alpha, Red, Green and Blue color channels used for shape stroke and fill.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ArgbColor.Create(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new instance of the ArgbColor class.
            </summary>
            <param name="a">The alpha color channel.</param>
            <param name="r">The red color channel.</param>
            <param name="g">The green color channel.</param>
            <param name="b">The blue color channel.</param>
            <returns>The new instance of the ArgbColor class.</returns>
        </member>
        <member name="P:Kaliber3D.Render.ArgbColor.A">
            <summary>
            Alpha color channel.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ArgbColor.R">
            <summary>
            Red color channel.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ArgbColor.G">
            <summary>
            Green color channel.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ArgbColor.B">
            <summary>
            Blue color channel.
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ArrowStyle">
            <summary>
            Specifies the arrow style used to draw line endings.
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.BaseStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseStyle.LineCapValues">
            <summary>
            The LineCap enum values.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseStyle.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseStyle.Stroke">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseStyle.Fill">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseStyle.Thickness">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseStyle.LineCap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseStyle.Dashes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.BaseStyle.DashOffset">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ArrowStyle.#ctor">
            <summary>
            Default ArrowStyle constructor.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ArrowStyle.#ctor(Kaliber3D.Render.BaseStyle)">
            <summary>
            Copy base style from BaseStyle source.
            </summary>
            <param name="source">The BaseStyle source object.</param>
        </member>
        <member name="M:Kaliber3D.Render.ArrowStyle.Create(Kaliber3D.Render.ArrowType,System.Boolean,System.Boolean,System.Double,System.Double)">
            <summary>
            Creates a new instance of the ArrowStyle class.
            </summary>
            <param name="arrowType">The arrow type.</param>
            <param name="isStroked">The arow shape stroke flag.</param>
            <param name="isFilled">The arow shape fill flag.</param>
            <param name="radiusX">The arrow X axis radius.</param>
            <param name="radiusY">The arrow Y axis radius.</param>
            <returns>The new instance of the ArrowStyle class.</returns>
        </member>
        <member name="M:Kaliber3D.Render.ArrowStyle.Create(System.String,Kaliber3D.Render.BaseStyle,Kaliber3D.Render.ArrowType,System.Boolean,System.Boolean,System.Double,System.Double)">
            <summary>
            Creates a new instance of the ArrowStyle class.
            </summary>
            <param name="name">The arrow style name.</param>
            <param name="source">The BaseStyle source object.</param>
            <param name="arrowType">The arrow type.</param>
            <param name="isStroked">The arow shape stroke flag.</param>
            <param name="isFilled">The arow shape fill flag.</param>
            <param name="radiusX">The arrow X axis radius.</param>
            <param name="radiusY">The arrow Y axis radius.</param>
            <returns>The new instance of the ArrowStyle class.</returns>
        </member>
        <member name="P:Kaliber3D.Render.ArrowStyle.ArrowTypeValues">
            <summary>
            The ArrowType enum values.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ArrowStyle.ArrowType">
            <summary>
            Gets or sets arrow type.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ArrowStyle.IsStroked">
            <summary>
            Gets or sets value indicating whether arrow shape is stroked.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ArrowStyle.IsFilled">
            <summary>
            Gets or sets value indicating whether arrow shape is filled.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ArrowStyle.RadiusX">
            <summary>
            Gets or sets arrow X axis radius.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ArrowStyle.RadiusY">
            <summary>
            Gets or sets arrow Y axis radius.
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ArrowType">
            <summary>
            Specifies line endings arrow types.
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ArrowType.None">
            <summary>
            No arrow is drawn.
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ArrowType.Rectangle">
            <summary>
            Draw rectangle shape as arrow.
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ArrowType.Ellipse">
            <summary>
            Draw ellipse shapes as arrow
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.ArrowType.Arrow">
            <summary>
            Draw tow line shapes as arrow.
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.FontStyle">
            <summary>
            Specifies style flags proxy information applied to text.
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.FontStyle.Create(Kaliber3D.Render.FontStyleFlags)">
            <summary>
            Creates a new instance of the FontStyle class.
            </summary>
            <param name="flags">The style flags information applied to text.</param>
            <returns>The new instance of the FontStyle class.</returns>
        </member>
        <member name="P:Kaliber3D.Render.FontStyle.Flags">
            <summary>
            Specifies style flags information applied to text.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.FontStyle.Regular">
            <summary>
            Normal text.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.FontStyle.Bold">
            <summary>
            Bold text.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.FontStyle.Italic">
            <summary>
            Italic text.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.FontStyle.Underline">
            <summary>
            Underlined text.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.FontStyle.Strikeout">
            <summary>
            Text with a line through the middle.
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.FontStyleFlags">
            <summary>
            Specifies style flags information applied to text.
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.FontStyleFlags.Regular">
            <summary>
            Normal text.
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.FontStyleFlags.Bold">
            <summary>
            Bold text.
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.FontStyleFlags.Italic">
            <summary>
            Italic text.
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.FontStyleFlags.Underline">
            <summary>
            Underlined text.
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.FontStyleFlags.Strikeout">
            <summary>
            Text with a line through the middle.
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.LineFixedLength">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.LineFixedLength.Create(Kaliber3D.Render.LineFixedLengthFlags,System.Double,Kaliber3D.Render.ShapeState,Kaliber3D.Render.ShapeState)">
            <summary>
            
            </summary>
            <param name="flags"></param>
            <param name="length"></param>
            <param name="startTrigger"></param>
            <param name="endTrigger"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.LineFixedLength.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.LineFixedLength.Disabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.LineFixedLength.Start">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.LineFixedLength.End">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.LineFixedLength.Vertical">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.LineFixedLength.Horizontal">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.LineFixedLength.All">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.LineFixedLength.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.LineFixedLength.StartTrigger">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.LineFixedLength.EndTrigger">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.LineCap">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.LineCap.Flat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.LineCap.Square">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.LineCap.Round">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.LineStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.LineStyle.Create(System.String,Kaliber3D.Render.LineFixedLength)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="fixedLength"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.LineStyle.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.LineStyle.FixedLength">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.LineFixedLengthFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.LineFixedLengthFlags.Disabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.LineFixedLengthFlags.Start">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.LineFixedLengthFlags.End">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.LineFixedLengthFlags.Vertical">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.LineFixedLengthFlags.Horizontal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.LineFixedLengthFlags.All">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.ShapeStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.ShapeStyle.Create(System.String,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Double,Kaliber3D.Render.TextStyle,Kaliber3D.Render.LineStyle,Kaliber3D.Render.ArrowStyle,Kaliber3D.Render.ArrowStyle,Kaliber3D.Render.LineCap,System.Double[],System.Double)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="sa"></param>
            <param name="sr"></param>
            <param name="sg"></param>
            <param name="sb"></param>
            <param name="fa"></param>
            <param name="fr"></param>
            <param name="fg"></param>
            <param name="fb"></param>
            <param name="thickness"></param>
            <param name="textStyle"></param>
            <param name="lineStyle"></param>
            <param name="startArrowStyle"></param>
            <param name="endArrowStyle"></param>
            <param name="lineCap"></param>
            <param name="dashes"></param>
            <param name="dashOffset"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.ShapeStyle.Create(System.String,Kaliber3D.Render.ArgbColor,Kaliber3D.Render.ArgbColor,System.Double,Kaliber3D.Render.TextStyle,Kaliber3D.Render.LineStyle,Kaliber3D.Render.ArrowStyle,Kaliber3D.Render.ArrowStyle)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="stroke"></param>
            <param name="fill"></param>
            <param name="thickness"></param>
            <param name="textStyle"></param>
            <param name="lineStyle"></param>
            <param name="startArrowStyle"></param>
            <param name="endArrowStyle"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.ShapeStyle.LineStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeStyle.StartArrowStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeStyle.EndArrowStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.ShapeStyle.TextStyle">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.StyleComparer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.StyleComparer.Equals(Kaliber3D.Render.ShapeStyle,Kaliber3D.Render.ShapeStyle)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Kaliber3D.Render.StyleComparer.GetHashCode(Kaliber3D.Render.ShapeStyle)">
            <summary>
            
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="T:Kaliber3D.Render.TextHAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.TextHAlignment.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.TextHAlignment.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.TextHAlignment.Right">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.TextStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kaliber3D.Render.TextStyle.Create(System.String,System.String,System.String,System.Double,Kaliber3D.Render.FontStyle,Kaliber3D.Render.TextHAlignment,Kaliber3D.Render.TextVAlignment)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="fontName"></param>
            <param name="fontFile"></param>
            <param name="fontSize"></param>
            <param name="fontStyle"></param>
            <param name="textHAlignment"></param>
            <param name="textVAlignment"></param>
            <returns></returns>
        </member>
        <member name="P:Kaliber3D.Render.TextStyle.TextHAlignmentValues">
            <summary>
            The TextHAlignment enum values.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.TextStyle.TextVAlignmentValues">
            <summary>
            The TextVAlignment enum values.
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.TextStyle.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.TextStyle.FontName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.TextStyle.FontFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.TextStyle.FontSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.TextStyle.FontStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.TextStyle.TextHAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kaliber3D.Render.TextStyle.TextVAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kaliber3D.Render.TextVAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.TextVAlignment.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.TextVAlignment.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:Kaliber3D.Render.TextVAlignment.Bottom">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
